// Copyright (c) 2017 Computer Vision Center (CVC) at the Universitat Autonoma
// de Barcelona (UAB).
//
// This work is licensed under the terms of the MIT license.
// For a copy, see <https://opensource.org/licenses/MIT>.

#pragma once

#include "carla/Memory.h"
#include "carla/NonCopyable.h"
#include "carla/sensor/DataMessage.h"

namespace carla {
namespace sensor {

  /// Base class for all the objects containing data generated by a sensor.
  class SensorData
    : public EnableSharedFromThis<SensorData>,
      private NonCopyable  {
  protected:

    explicit SensorData(const DataMessage &message)
      : _frame_number(message.GetFrameNumber()),
        _sensor_transform(message.GetSensorTransform()) {}

  public:

    virtual ~SensorData() = default;

    size_t GetFrameNumber() const {
      return _frame_number;
    }

    const rpc::Transform &GetSensorTransform() const {
      return _sensor_transform;
    }

  private:

    const size_t _frame_number;

    const rpc::Transform _sensor_transform;
  };

} // namespace sensor
} // namespace carla
